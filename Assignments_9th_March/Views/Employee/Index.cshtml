@model PaginatedList<Assignments_9th_March.Models.Employee>

@{
    ViewData["Title"] = "Employee List";
}

<h1>Employee List</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-action="Index" method="get">
    <p>
        <input type="text" name="searchString" value="@ViewData["CurrentFilter"]" />
        <input type="submit" value="Search" />
    </p>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.ActionLink("First Name", "Index", new { sortOrder = ViewData["NameSortParm"], currentFilter = ViewData["CurrentFilter"] })
            </th>
            <th>
                @Html.ActionLink("Last Name", "Index", new { sortOrder = ViewData["NameSortParm"], currentFilter = ViewData["CurrentFilter"] })
            </th>
            <th>
                @Html.ActionLink("Gender", "Index", new { sortOrder = ViewData["NameSortParm"], currentFilter = ViewData["CurrentFilter"] })
            </th>
            <th>
                @Html.ActionLink("DateOfBirth", "Index", new { sortOrder = ViewData["NameSortParm"], currentFilter = ViewData["CurrentFilter"] })
            </th>
            <th>
                @Html.ActionLink("Email", "Index", new { sortOrder = ViewData["NameSortParm"], currentFilter = ViewData["CurrentFilter"] })
            </th>
            <th>
                @Html.ActionLink("Phone", "Index", new { sortOrder = ViewData["NameSortParm"], currentFilter = ViewData["CurrentFilter"] })
            </th>
            <th>

                @Html.ActionLink("Department", "Index", new { sortOrder = ViewData["DeptSortParm"], currentFilter = ViewData["CurrentFilter"] })
            </th>
            <th>
                @Html.ActionLink("City", "Index", new { sortOrder = ViewData["DeptSortParm"], currentFilter = ViewData["CurrentFilter"] })
            </th>
            <th>
                @Html.ActionLink("State", "Index", new { sortOrder = ViewData["DeptSortParm"], currentFilter = ViewData["CurrentFilter"] })
            </th>
            <th>
                @Html.ActionLink("Country", "Index", new { sortOrder = ViewData["DeptSortParm"], currentFilter = ViewData["CurrentFilter"] })

            </th>
            <th>
                @Html.ActionLink("Pin Code", "Index", new { sortOrder = ViewData["DeptSortParm"], currentFilter = ViewData["CurrentFilter"] })

            </th>
            
            <th>
                @Html.ActionLink("Hobbies", "Index", new { sortOrder = ViewData["DeptSortParm"], currentFilter = ViewData["CurrentFilter"] })
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Gender)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateOfBirth)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Phone)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Department)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.City)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.State)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Country)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Pin_Code)
                </td>
                
                <td>
                    @Html.DisplayFor(modelItem => item.Hobbies)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex - 1)" class="btn btn-default @prevDisabled">Previous</a>
<a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex + 1)" class="btn btn-default @nextDisabled">Next</a>
